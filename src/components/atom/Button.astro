---
export interface Props {
	text: string,
	color?: 'blue' | 'yellow',
    type?: 'button' | 'submit',
    fullWidth?: boolean,
    outlined?: boolean,
}

const {fullWidth, text, color = 'blue', outlined = false, type = 'button' } = Astro.props;
---

<button 
    class:list={`flex items-center justify-center 
    ${color} ${outlined ? 'outlined' : ''} ${fullWidth ? 'w-full' : 'w-fit'}`}
    type={type}
>
<div>
    <span>{text}</span>
    <span>{text}</span>
</div>
</button>

<style lang="scss">
@use '../../styles/_variables.scss' as *;
    
button {
    font-weight: bold;
    border-radius: 6px;
    cursor: pointer;
    border: solid 1px transparent;
    white-space: nowrap;
    transition: ease-in-out .3s;
    position: relative;
    overflow: hidden;
    
    span {
        position: relative;
        display: block;
        z-index: 10;
    }

    &.blue {
        background-color: var(--purple);
        color: var(--blue);
        filter: drop-shadow(0px 3px 10px rgba(81, 91, 224, 0.55));
        border-color: var(--purple);
        &:after {
            background: var(--purple);
        }
        span:last-child {
		    color: var(--purple);
		}
    }

    &.yellow {
        color: #171C26;
        box-shadow: 0px 3px 10px 0px rgba(0, 0, 0, 0.15);
        border-color: var(--yellow);
        &:after {
            background: var(--yellow);
        }
        span:last-child {
		    color: var(--yellow);
		}
    }

	&:before {
		@include position(0,0);
		width: 100%;
		height: 100%;
		background: var(--light);
		border-radius: 50% 50% 0 0;
		transform: translateY(100%) scaleY(0.5);
		transition: .6s ease;
	}
	&:after {
		@include position(0,0);
		width: 100%;
		height: 100%;
		background: var(--yellow);
		border-radius: 0;
		transform: translateY(0) scaleY(1);
		transition: .6s ease;
	}
	div {
		position: relative;
		width: 100%;
		height: 42px;
        padding: 0 25px;
		overflow: clip;
		transition: .3s 2s ease-in-out;
	}
	span {
		z-index: 1;
		top: 0;
        font-size: 14px;
        font-weight: bold;
		width: 100%;
		text-align: center;
		transition: .6s ease;
		&:first-child {
            color: var(--dark);
            top: 50%;
            translate: 0 -50%
		}
		&:last-child {
		    color: var(--yellow);
            top: 100%;
            translate: 0 -50%
		}
	}
	&:hover {
		background-color: var(--deep-blue);			
		transition:.6s ease;
		transition-delay: 0.6s;
		&:after {
			border-radius: 0 0 50% 50%;
			transform: translateY(-100%) scaleY(0.5);
			transition-delay: 0;
		}
		&:before {
			border-radius: 0;
			transform: translateY(0) scaleY(1);
			transition-delay: 0;
		}

		& > div {
			background-color: var(--deep-blue);			
			transition: .3s .0s ease-in-out;
		}
		span {
			&:first-child {
				top: -50%;
			}
			&:last-child {
				top: 0;
			}
		}
	}
    
}
</style>
